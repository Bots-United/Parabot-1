# Makefile for parabot
# Copyright Â© nekonomicon 2016

MODULE =	parabot
OSLIB =		so
CXX ?=		g++

CFLAGS +=	-Os -pipe -DNDEBUG \
		-fsigned-char -fPIC \
		-ffast-math -funroll-loops \
		-fomit-frame-pointer -ftree-vectorize \
		-fvisibility=hidden -fno-rtti -fno-exceptions \
		-ffunction-sections -fdata-sections \
		-fno-asynchronous-unwind-tables

INCLUDES =	-I. \
		-I../bot \
		-I../utils \
		-I../common \
		-I../dlls \
		-I../engine \
		-I../pm_shared \
		-I../metamod

SRC =		../bot/bot.cpp \
		../bot/bot_client.cpp \
		commands.cpp \
		dll.cpp \
		engine.cpp \
		h_export.cpp \
		linkfunc.cpp \
		startframe.cpp \
		util.cpp \
		../bot/marker.cpp \
		../bot/parabot.cpp \
		../bot/pb_action.cpp \
		../bot/pb_cell.cpp \
		../bot/pb_chat.cpp \
		../bot/pb_combat.cpp \
		../bot/pb_combatgoals.cpp \
		../bot/pb_configuration.cpp \
		../bot/pb_focus.cpp \
		../bot/pb_global.cpp \
		../bot/pb_goalfinder.cpp \
		../bot/pb_goals.cpp \
		../bot/pb_journey.cpp \
		../bot/pb_kills.cpp \
		../bot/pb_mapcells.cpp \
		../bot/pb_mapgraph.cpp \
		../bot/pb_mapimport.cpp \
		../bot/pb_navpoint.cpp \
		../bot/pb_needs.cpp \
		../bot/pb_observer.cpp \
		../bot/pb_path.cpp \
		../bot/pb_perception.cpp \
		../bot/pb_roaming.cpp \
		../bot/pb_sectors.cpp \
		../bot/pb_vistable.cpp \
		../bot/pb_weapon.cpp \
		../bot/pb_weaponhandling.cpp \
		../bot/pbt_dynarray.cpp \
		../bot/pbt_priorityqueue.cpp \
		../bot/sounds.cpp \
		../bot/utilityfuncs.cpp \
		../metamod/meta_api.cpp

SYS =		$(shell $(CXX) -dumpmachine)
ifneq (, $(findstring linux, $(SYS)))
LDFLAGS +=	-ldl
endif
ifneq (, $(findstring mingw, $(SYS)))
CFLAGS +=       -fno-data-sections
LDFLAGS +=	-Wl,--add-stdcall-alias -static-libgcc -static-libstdc++
OSLIB =		dll
endif
ifneq (, $(findstring darwin, $(SYS)))
OSLIB =         dylib
endif
ifneq (, $(findstring gcc, $(CC)))
LDFLAGS +=       -static-libstdc++
endif
ifneq (, $(findstring x86_64, $(SYS)))
CFLAGS +=       -m32
LDFLAGS +=	-m32
endif

LDFLAGS +=	-shared 
LIBNAME =	$(MODULE).$(OSLIB)

OBJ = $(SRC:%.cpp=%.o)

all: $(LIBNAME)

$(LIBNAME): $(OBJ)
	$(CXX) $(OBJ) $(LDFLAGS) -o $(LIBNAME)

.cpp.o:
	$(CXX) $(CFLAGS) $(INCLUDES) -c $< -o $@

.PHONY: all clean

clean:
	rm -rf $(OBJ)
	rm $(LIBNAME)
